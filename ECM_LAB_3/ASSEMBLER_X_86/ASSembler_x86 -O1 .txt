McLorenExp(double, int):
        sub     esp, 12
        fld     QWORD PTR [esp+16]
        mov     edx, DWORD PTR [esp+24]
        test    edx, edx
        jle     .L4
        mov     eax, 0
        fld1
        fldz
        jmp     .L3
.L7:
        fxch    st(1)
.L3:
        fadd    st, st(1)
        fxch    st(1)
        fmul    st, st(2)
        add     eax, 1
        mov     DWORD PTR [esp+4], eax
        fild    DWORD PTR [esp+4]
        fdivp   st(1), st
        cmp     eax, edx
        jne     .L7
        fstp    st(0)
        fstp    st(1)
.L1:
        add     esp, 12
        ret
.L4:
        fstp    st(0)
        fldz
        jmp     .L1
.LC3:
        .string "wb"
.LC4:
        .string "out.txt"
.LC5:
        .string "%lf"
main:
        lea     ecx, [esp+4]
        and     esp, -16
        push    DWORD PTR [ecx-4]
        push    ebp
        mov     ebp, esp
        push    edi
        push    esi
        push    ebx
        push    ecx
        sub     esp, 36
        push    51200000
        call    malloc
        mov     esi, eax
        add     esp, 16
        mov     ebx, 0
.L9:
        sub     esp, 4
        push    1000
        mov     DWORD PTR [ebp-28], ebx
        fild    DWORD PTR [ebp-28]
        fdivr   DWORD PTR .LC0
        lea     esp, [esp-8]
        fstp    QWORD PTR [esp]
        call    McLorenExp(double, int)
        add     esp, 16
        fstp    QWORD PTR [esi+ebx*8]
        add     ebx, 1
        cmp     ebx, 6400000
        jne     .L9
        sub     esp, 8
        push    OFFSET FLAT:.LC3
        push    OFFSET FLAT:.LC4
        call    fopen
        mov     edi, eax
        mov     ebx, esi
        lea     eax, [esi+51200000]
        mov     DWORD PTR [ebp-28], eax
        add     esp, 16
.L10:
        push    DWORD PTR [ebx+4]
        push    DWORD PTR [ebx]
        push    OFFSET FLAT:.LC5
        push    edi
        call    fprintf
        add     ebx, 8
        add     esp, 16
        cmp     ebx, DWORD PTR [ebp-28]
        jne     .L10
        sub     esp, 12
        push    esi
        call    free
        mov     DWORD PTR [esp], edi
        call    fclose
        add     esp, 16
        mov     eax, 0
        lea     esp, [ebp-16]
        pop     ecx
        pop     ebx
        pop     esi
        pop     edi
        pop     ebp
        lea     esp, [ecx-4]
        ret
.LC0:
        .long   1065353216