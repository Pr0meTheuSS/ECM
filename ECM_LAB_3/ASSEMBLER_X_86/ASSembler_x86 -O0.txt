McLorenExp(double, int):
        push    ebp			;пушим в стек ebp 
        mov     ebp, esp		;esp->ebp
        sub     esp, 48			;esp - 48 - место для локальных пер-нных
        mov     eax, DWORD PTR [ebp+8]	;со стека в регистр eax записываем арг
        mov     DWORD PTR [ebp-40], eax	;из eax в локальную переменную 
        mov     eax, DWORD PTR [ebp+12]	;со стека в регистр eax записываем арг
        mov     DWORD PTR [ebp-36], eax	;из eax в локальную переменную 
        fldz				;пуш на стек сопроцессора для вещественной арифметики
        fstp    QWORD PTR [ebp-8]	;снимаем со стека сопроцессора в локальную переменную
        fld1				;пуш на стек сопроцессора для вещественной арифметики
        fstp    QWORD PTR [ebp-16]	;снимаем со стека сопроцессора в локальную переменную
        mov     DWORD PTR [ebp-20], 0	;обнуляем локальную переменную - счетчик цикла
.L3:					
        mov     eax, DWORD PTR [ebp-20]	; в eax помещаем счетчик цикла
        cmp     eax, DWORD PTR [ebp+16]	;сравниваем с аргументом N
        jge     .L2			;переход при условии >=
        fld     QWORD PTR [ebp-8]	;кладем в стек сопроц 
        fadd    QWORD PTR [ebp-16]	;складываем с второй локальной переменной (result + element)
        fstp    QWORD PTR [ebp-8]	;кладём результат в локальную переменную
        fld     QWORD PTR [ebp-16]	;помещаем на стек 
        fmul    QWORD PTR [ebp-40]	;перемножаем число на вершине стека сопроц  с локальной переменной
        mov     eax, DWORD PTR [ebp-20]	; счетчик цикла в eax
        add     eax, 1			;инкремент eax
        mov     DWORD PTR [ebp-44], eax	;eax в лок переменную 
        fild    DWORD PTR [ebp-44]	;преведение типа
        fdivp   st(1), st		;разность вещественных чисел
        fstp    QWORD PTR [ebp-16]	;сохранение результата прошлой операции в локальную переменную
        add     DWORD PTR [ebp-20], 1	;инкремент счетчика цикла 
        jmp     .L3			;безусловный переход 
.L2:					
        fld     QWORD PTR [ebp-8]	;пуш локальной переменной на стек сопроцессора 
        leave				;восстановление состояний rsp и rbp
        ret				;передача управления вызывающей функции
.LC3:
        .string "wb"
.LC4:
        .string "out.txt"
.LC5:
        .string "%lf"
main:
        lea     ecx, [esp+4]		; адрес esp+4 в регистр ecx
        and     esp, -16		;логическое И
        push    DWORD PTR [ecx-4]	;пуш переменной в стек
        push    ebp			;пуш ebp 
        mov     ebp esp			;esp ->ebp
        push    ebx			;пуш ebx
        push    ecx			;пуш ecx
        sub     esp, 16			;esp - 16
        sub     esp, 12			;esp - 12 - для лок переменных
        push    51200000		;пуш 51200000 - аргумент функции 
        call    malloc			;вызов маллок 
        add     esp, 16			;смещение esp на 16
        mov     DWORD PTR [ebp-20], eax	; eax -> локальная переменная
        mov     DWORD PTR [ebp-12], 0	;обнуление счетчика цикла
.L7:
        cmp     DWORD PTR [ebp-12], 6399999	;сравнение счетчика цикла и 6399999
        jg      .L6				;переход если больше
        fild    DWORD PTR [ebp-12]		;приведение типа
        fld1					;пуш на стек спрцссора
        fdivrp  st(1), st			;разность вещественных чисел
        mov     eax, DWORD PTR [ebp-12]		;
        lea     edx, [0+eax*8]			;вычисление смещения для работы с массивом
        mov     eax, DWORD PTR [ebp-20]		;
        lea     ebx, [edx+eax]			;вычесление адреса смещения
        sub     esp, 4				;выделение на стеке 4 байт 
        push    1000				;пуш 1000 на стек
        lea     esp, [esp-8]			;сохранение указателя на топ стека с учетом вызова функции
        fstp    QWORD PTR [esp]			;передача аргумента функции через стек сопроцессора
        call    McLorenExp(double, int)		;вызов функции 
        add     esp, 16				;восстановление стека 
        fstp    QWORD PTR [ebx]			;снятие со стеа сопроцессора
        add     DWORD PTR [ebp-12], 1		;инкремент счетчика цикла
        jmp     .L7				;безусловный  переход
.L6:
        sub     esp, 8				;место для локальных переменных
        push    OFFSET FLAT:.LC3		;пуш на стек строк-констант
        push    OFFSET FLAT:.LC4		;пуш на стек строк-констант
        call    fopen				;вызов fopen 
        add     esp, 16				;восстановление стека
        mov     DWORD PTR [ebp-24], eax		;результат fopen через eax в локвльную переменную out
        mov     DWORD PTR [ebp-16], 0		;обнуление счетчика цикла
.L9:	
        cmp     DWORD PTR [ebp-16], 6399999	;сравнение счетчика
        jg      .L8				;переход если больше
        mov     eax, DWORD PTR [ebp-16]		;подсчет смещения
        lea     edx, [0+eax*8]			;смещение для элемента массива в соотв со значением счетчика цикла
        mov     eax, DWORD PTR [ebp-20]		;
        add     eax, edx			;
        fld     QWORD PTR [eax]			;
        lea     esp, [esp-8]			;
        fstp    QWORD PTR [esp]			;
        push    OFFSET FLAT:.LC5		;пуш аргумента (константной строки) для fprintf
        push    DWORD PTR [ebp-24]		;
        call    fprintf				;вызов fprintf
        add     esp, 16				;
        add     DWORD PTR [ebp-16], 1		;инкремент счетчика цикла
        jmp     .L9				;
.L8:			
        sub     esp, 12				;работа со стеком для передачи аргументов в функцию 
        push    DWORD PTR [ebp-20]		;
        call    free				;вызов free
        add     esp, 16				;работа со стеком для передачи аргументов в функцию 
        sub     esp, 12				;
        push    DWORD PTR [ebp-24]		;
        call    fclose				;вызов функции fclose
        add     esp, 16				;
        mov     eax, 0				;
        lea     esp, [ebp-8]			;
        pop     ecx				;
        pop     ebx				;
        pop     ebp				;
        lea     esp, [ecx-4]			;восстановление состояния стека до вызова функции + 4bytes для возвращаемого значения
         ret					;возврат управления вызывающей функции