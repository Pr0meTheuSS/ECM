McLorenExp(double, int):
        movapd  xmm3, xmm0
        test    edi, edi
        jle     .L4
        mov     eax, 0
        movsd   xmm0, QWORD PTR .LC0[rip]
        pxor    xmm1, xmm1
.L3:
        addsd   xmm1, xmm0
        mulsd   xmm0, xmm3
        add     eax, 1
        pxor    xmm2, xmm2
        cvtsi2sd        xmm2, eax
        divsd   xmm0, xmm2
        cmp     eax, edi
        jne     .L3
.L1:
        movapd  xmm0, xmm1
        ret
.L4:
        pxor    xmm1, xmm1
        jmp     .L1
.LC2:
        .string "wb"
.LC3:
        .string "out.txt"
.LC4:
        .string "%lf"
main:
        push    r13
        push    r12
        push    rbp
        push    rbx
        sub     rsp, 8
        mov     edi, 51200000
        call    malloc
        mov     rbp, rax
        mov     ebx, 0
.L7:
        pxor    xmm1, xmm1
        cvtsi2sd        xmm1, ebx
        movsd   xmm0, QWORD PTR .LC0[rip]
        divsd   xmm0, xmm1
        mov     edi, 1000
        call    McLorenExp(double, int)
        movsd   QWORD PTR [rbp+0+rbx*8], xmm0
        add     rbx, 1
        cmp     rbx, 6400000
        jne     .L7
        mov     esi, OFFSET FLAT:.LC2
        mov     edi, OFFSET FLAT:.LC3
        call    fopen
        mov     r12, rax
        mov     rbx, rbp
        lea     r13, [rbp+51200000]
.L8:
        movsd   xmm0, QWORD PTR [rbx]
        mov     esi, OFFSET FLAT:.LC4
        mov     rdi, r12
        mov     eax, 1
        call    fprintf
        add     rbx, 8
        cmp     rbx, r13
        jne     .L8
        mov     rdi, rbp
        call    free
        mov     rdi, r12
        call    fclose
        mov     eax, 0
        add     rsp, 8
        pop     rbx
        pop     rbp
        pop     r12
        pop     r13
        ret
.LC0:
        .long   0
        .long   1072693248