McLorenExp(double, int):
        sub     esp, 12
        mov     edx, DWORD PTR [esp+24]
        fld     QWORD PTR [esp+16]
        test    edx, edx
        jle     .L4
        fld1
        xor     eax, eax
        fldz
        jmp     .L3
.L8:
        fxch    st(1)
.L3:
        fadd    st, st(1)
        fxch    st(1)
        add     eax, 1
        mov     DWORD PTR [esp+4], eax
        fmul    st, st(2)
        fild    DWORD PTR [esp+4]
        fdivp   st(1), st
        cmp     eax, edx
        jne     .L8
        fstp    st(0)
        fstp    st(1)
        add     esp, 12
        ret
.L4:
        fstp    st(0)
        fldz
        add     esp, 12
        ret
.LC3:
        .string "wb"
.LC4:
        .string "out.txt"
.LC5:
        .string "%lf"
main:
        lea     ecx, [esp+4]
        and     esp, -16
        push    DWORD PTR [ecx-4]
        push    ebp
        mov     ebp, esp
        push    edi
        push    esi
        push    ebx
        push    ecx
        sub     esp, 36
        push    51200000
        call    malloc
        add     esp, 16
        xor     edx, edx
        mov     ebx, eax
.L11:
        mov     DWORD PTR [ebp-28], edx
        fld1
        fild    DWORD PTR [ebp-28]
        xor     eax, eax
        fdivr   st, st(1)
        fldz
        jmp     .L10
.L17:
        fxch    st(2)
.L10:
        fadd    st, st(2)
        fxch    st(2)
        add     eax, 1
        mov     DWORD PTR [ebp-28], eax
        fmul    st, st(1)
        fild    DWORD PTR [ebp-28]
        fdivp   st(1), st
        cmp     eax, 1000
        jne     .L17
        fstp    st(0)
        fstp    st(0)
        fstp    QWORD PTR [ebx+edx*8]
        add     edx, 1
        cmp     edx, 6400000
        jne     .L11
        sub     esp, 8
        mov     edi, ebx
        push    OFFSET FLAT:.LC3
        push    OFFSET FLAT:.LC4
        call    fopen
        add     esp, 16
        mov     esi, eax
        lea     eax, [ebx+51200000]
        mov     DWORD PTR [ebp-28], eax
.L12:
        push    DWORD PTR [edi+4]
        add     edi, 8
        push    DWORD PTR [edi-8]
        push    OFFSET FLAT:.LC5
        push    esi
        call    fprintf
        add     esp, 16
        cmp     edi, DWORD PTR [ebp-28]
        jne     .L12
        sub     esp, 12
        push    ebx
        call    free
        mov     DWORD PTR [esp], esi
        call    fclose
        add     esp, 16
        lea     esp, [ebp-16]
        xor     eax, eax
        pop     ecx
        pop     ebx
        pop     esi
        pop     edi
        pop     ebp
        lea     esp, [ecx-4]
        ret